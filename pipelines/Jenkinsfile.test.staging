@Library('dynatrace@master') _

def tagMatchRules = [
  [
    meTypes: [
      [meType: 'SERVICE']
    ],
    tags : [
      [context: 'CONTEXTLESS', key: 'service', value: ''],
      [context: 'CONTEXTLESS', key: 'application', value: ''],
      [context: 'CONTEXTLESS', key: 'environment', value: 'staging']
    ]
  ]
]

def IMAGE_TAG = 'UNKNOWN'
def PULL_REQUEST = 'UNKNOWN'
def STABLE_TAG = 'UNKNOWN'

pipeline {
  parameters {
    string(name: 'GITHUBORG', defaultValue: '', description: 'The name of the GitHub organization.', trim: true)
    string(name: 'PROJECT', defaultValue: '', description: 'The name of the entire project.', trim: true)
    string(name: 'STAGE', defaultValue: '', description: 'The stage to deploy the service to.', trim: true)
    string(name: 'SERVICE', defaultValue: '', description: 'The name of the service to deploy.', trim: true)
    string(name: 'IMAGE', defaultValue: '', description: 'The image of the new service.', trim: true)
    string(name: 'TAG', defaultValue: '', description: 'The tag of the new service.', trim: true)
  }
  agent {
    label 'kubegit'
  }
  stages {
    /*
    stage('Run production ready e2e check in staging') {
      steps {
        recordDynatraceSession (
          envId: 'Dynatrace Tenant',
          testCase: 'loadtest',
          tagMatchRules: tagMatchRules
        ) 
        {
          container('jmeter') {
            script {
              def status = executeJMeter ( 
                scriptName: "jmeter/front-end_e2e_load.jmx",
                resultsDir: "e2eCheck_${env.APP_NAME}",
                serverUrl: "front-end.staging", 
                serverPort: 8080,
                checkPath: '/health',
                vuCount: 10,
                loopCount: 5,
                LTN: "e2eCheck_${BUILD_NUMBER}",
                funcValidation: false,
                avgRtValidation: 4000
              )
              if (status != 0) {
                currentBuild.result = 'FAILED'
                error "Production ready e2e check in staging failed."
              }
            }
          }
        }
      }
    }
    */
  }
  post {
    always {
      container("curl") {
        sendCloudEvent(
          receiver: 'event-broker.keptn.svc.cluster.local/keptn',
          type: 'sh.keptn.events.tests-finished',
          source: 'Jenkins', 
          data: [
            [key: 'gitHubOrg', value: "${env.GITHUBORG}"],
            [key: 'project', value: "${env.PROJECT}"],
            [key: 'stage', value: "${env.STAGE}"],
            [key: 'service', value: "${env.SERVICE}"],
            [key: 'image', value: "${env.IMAGE}"],
            [key: 'tag', value: "${env.TAG}"]
          ]
        )
      }
    }
  }
}
